#
# Load Balancer, listen on port 80
#
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  ports:
    - port: 80
  selector:
    app: wordpress
  type: LoadBalancer
---
#
# Define storage claim
#
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: do-block-storage
  resources:
    requests:
      storage: 1Gi #put here your required storage capacity
---
#
# Kubernetes Deployment
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - name: wordpress
        image: dgerog/wp-on-cloud #apache + php + WP
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html #default root path for webserver
        lifecycle:
          postStart:
            exec:
              #populate the mounted fs (using pvc) from the docker image installation and then delete it
              command:  ["/bin/sh", "-c", "cp -R ~/initial-deployment/* /var/www/html; chmod -R 755 /var/www/html; rm -rf ~/initial-deployment"]
      imagePullSecrets:
        - name: docker-hub-cred #credentials to sync with Docker Hub & pull the image          
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim